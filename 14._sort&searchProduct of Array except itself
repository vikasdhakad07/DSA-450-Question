METHOD 1:

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int arr[]=new int[n];
	    for(int i=0;i<n;i++){
	        arr[i]=sc.nextInt();
	    }
		productExceptSelf(arr,n);
	}
	public static long[] productExceptSelf(int nums[], int n) 
	{ 
        // code here
        long left[]=new long[n];
        long right[]=new long[n];
        long pro[]=new long[n];
        
        left[0]=1;
        right[n-1]=1;
        
        for(int i=1;i<n;i++){
            left[i]=left[i-1]*nums[i-1];
        }
        
        for(int i=n-2;i>=0;i--){
            right[i]=right[i+1]*nums[i+1];
        }
        
        for(int i=0;i<n;i++){
            pro[i]=left[i]*right[i];
        }
        
        for(int i=0;i<n;i++){
        System.out.print(pro[i]+" ");
        }
        return pro;
	} 
}

*******************************************************************************************************************************************************************
METHOD 2:THIS APPROACH NOT HANDLE 0

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int arr[]=new int[n];
	    for(int i=0;i<n;i++){
	        arr[i]=sc.nextInt();
	    }
	    
	    product(arr,n);
	}
	
	public static long[] product(int arr[],int n){
	    long pro=1;
	    for(int i=0;i<n;i++){
	        pro=pro*arr[i];
	        
	    }
     long duct[]=new long[n];
for(int i=0;i<n;i++){
    duct[i]=pro/arr[i];
}
  for(int i=0;i<n;i++){
      System.out.print(duct[i]+" ");
  }
   return duct;
	}
}

****************************************************************************************************************************************************************
METHOD 3:

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int arr[]=new int[n];
	    for(int i=0;i<n;i++){
	        arr[i]=sc.nextInt();
	    }
		product(arr,n);
	}
	
	public static void product(int arr[],int n){
	    if(n==1){
	        System.out.print("0");
	        return;
	    }
	    
	    int i=0;
	    long temp=1;
	    long pro[]=new long[n];
	    for(i=0;i<n;i++){
	        pro[i]=1;
	    }
	    
	    for(i=0;i<n;i++){
	        pro[i]=temp;
	        temp*=arr[i];
	    }
	    
	    temp=1;
	    
	    for(i=n-1;i>=0;i--){
	        pro[i]*=temp;
	        temp*=arr[i];
	    }
	    
	    for(i=0;i<n;i++){
	        System.out.print(pro[i]+" ");
	    }
	}
}

********************************************************************************************************************************************************************

METHOD:4(Best Approach)

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int arr[]=new int[n];
	    for(int i=0;i<n;i++){
	        arr[i]=sc.nextInt();
	    }
		productExceptSelf(arr,n);
	}
	
		public static long[] productExceptSelf(int nums[], int n) 
	{ 
        // code here
         long prod = 1;
        long flag = 0;
 
        for (int i = 0; i < n; i++) {
 
            if (nums[i] == 0)
                flag++;
            else
                prod *= nums[i];
        }
 
        long arr[] = new long[n];
        for (int i = 0; i < n; i++) {

            if (flag > 1) {
                arr[i] = 0;
            }
 
            else if (flag == 0)
                arr[i] = (prod / nums[i]);
 
            else if (flag == 1 && nums[i] != 0) {
                arr[i] = 0;
            }
 
            else
                arr[i] = prod;
        }
        for(int i=0;i<n;i++){
            System.out.print(arr[i]+" ");
        }
        return arr;
	} 
}
