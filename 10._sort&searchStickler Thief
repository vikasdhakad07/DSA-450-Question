Apppoach1:DP with Space Optimization

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int[] arr=new int[n];
	    for(int i=0;i<n;i++){
	        arr[i]=sc.nextInt();
	    }
		System.out.println(FindMaxSum(arr,n));
	}
	public static int FindMaxSum(int arr[], int n)
    {
        int prev=arr[0];
        int prev2=0;
        for(int i=1;i<n;i++){
            int take=arr[i];
            if(i>1) take +=prev2;
            
            int notTake=0+prev;
            
            int curl=Math.max(take,notTake);
            prev2=prev;
            prev=curl;
        }
        return prev;
    }
}
