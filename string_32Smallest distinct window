import java.util.*;
Method 01:

public class Main
{
  public static void main (String[]args)
  {
      Scanner sc=new Scanner(System.in);
      String str=sc.next();
      System.out.println(findSubString(str));
  }
public static int findSubString( String str) {
        // Your code goes here
        HashMap<Character,Integer> hm=new HashMap<>();
        for(int i=0;i<str.length();i++){
            hm.put(str.charAt(i),1);
        }
        int i=0,j=0,res=Integer.MAX_VALUE,count=hm.size();
        while(j<str.length()){
            char ch=str.charAt(j);
            hm.put(ch,hm.get(ch)-1);
            if(hm.get(ch)==0)
            count--;
            if(count==0){
                while(i<str.length()&&count==0){
                    res=Math.min(res,j-i+1);
                    hm.put(str.charAt(i),hm.get(str.charAt(i))+1);
                    if(hm.get(str.charAt(i))>0)
                    count++;
                    i++;
                }
            }
            j++;
        }
        return res;  }

}


Method 02:



class Solution{
    int longestUniqueSubsttr(String S){
        
        HashMap<Character, Integer> hm=new HashMap<>();
        int n=S.length();
        int left=0, right=0;
        int len=0;
        while(right<n){
            if(hm.containsKey(S.charAt(right))){
                left=Math.max(hm.get(S.charAt(right))+1, left);
            }
            
            hm.put(S.charAt(right),right);
            len=Math.max(len, right-left+1);
            right++;
        }
        return len;
    }
}
